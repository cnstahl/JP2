%!PS-Adobe-2.0 EPSF-2.0
%%Title: spectrum.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Thu Oct 26 20:25:14 2000
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 226
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 180 scalefont setfont
1.000 UL
LTb
5660 1733 M
[ [(Times-Roman) 180.0 0.0 true true (q)]
] -60.0 MCshow
2983 3612 M
[ [(Symbol) 180.0 0.0 true true (e)]
[(Times-Roman) 144.0 -54.0 true true (0)]
[(Times-Roman) 180.0 0.0 true true (\(q\))]
] -42.0 MLshow
306 1711 M
[ [(Times-Roman) 180.0 0.0 true true (-)]
[(Symbol) 180.0 0.0 true true (p)]
] -60.0 MCshow
5454 1711 M
[ [(Symbol) 180.0 0.0 true true (p)]
] -60.0 MCshow
1.000 UL
LT0
100 1818 M
5560 0 V
-122 -33 R
122 33 V
-122 32 V
1.000 UL
LT0
2880 216 M
0 3439 V
32 -122 R
-32 122 V
-33 -122 V
1.000 UL
LT0
306 1775 M
0 86 V
1.000 UL
LT0
5454 1775 M
0 86 V
1.000 UL
LT1
4635 549 M
[ [(Times-Roman) 180.0 0.0 true true (spin up)]
] -60.0 MRshow
4743 549 M
495 0 V
306 1598 M
52 -8 V
52 -22 V
52 -30 V
52 -36 V
52 -38 V
52 -40 V
52 -41 V
52 -40 V
52 -40 V
52 -39 V
52 -39 V
52 -38 V
52 -38 V
52 -36 V
52 -36 V
52 -35 V
52 -33 V
52 -33 V
52 -32 V
52 -31 V
52 -30 V
52 -28 V
52 -28 V
52 -27 V
52 -26 V
52 -25 V
52 -23 V
52 -23 V
52 -22 V
52 -21 V
52 -19 V
52 -19 V
52 -18 V
52 -16 V
52 -16 V
52 -14 V
52 -14 V
52 -12 V
52 -12 V
52 -10 V
52 -9 V
52 -9 V
52 -7 V
52 -6 V
52 -5 V
52 -5 V
52 -3 V
52 -2 V
52 -1 V
52 0 V
52 1 V
52 2 V
52 3 V
52 5 V
52 5 V
52 6 V
52 7 V
52 9 V
52 9 V
52 10 V
52 12 V
52 12 V
52 14 V
52 14 V
52 16 V
52 16 V
52 18 V
52 19 V
52 19 V
52 21 V
52 22 V
52 23 V
52 23 V
52 25 V
52 26 V
52 27 V
52 28 V
52 28 V
52 30 V
52 31 V
52 32 V
52 33 V
52 33 V
52 35 V
52 36 V
52 36 V
52 38 V
52 38 V
52 39 V
52 39 V
52 40 V
52 40 V
52 41 V
52 40 V
52 38 V
52 36 V
52 30 V
52 22 V
52 8 V
1.000 UL
LT1
4060 3527 M
42 -64 V
52 -78 V
52 -77 V
52 -76 V
52 -75 V
52 -74 V
52 -73 V
52 -71 V
52 -71 V
52 -69 V
52 -68 V
52 -67 V
52 -66 V
52 -65 V
52 -63 V
52 -63 V
52 -60 V
52 -60 V
52 -58 V
52 -56 V
52 -53 V
52 -52 V
52 -48 V
52 -43 V
52 -35 V
52 -25 V
52 -9 V
1.000 UL
LT1
306 1908 M
52 9 V
52 25 V
52 35 V
52 43 V
52 48 V
52 52 V
52 53 V
52 56 V
52 58 V
52 60 V
52 60 V
52 63 V
52 63 V
52 65 V
52 66 V
52 67 V
52 68 V
52 69 V
52 71 V
52 71 V
52 73 V
52 74 V
52 75 V
52 76 V
52 77 V
52 78 V
42 64 V
1.000 UL
LT2
4635 369 M
[ [(Times-Roman) 180.0 0.0 true true (spin down)]
] -60.0 MRshow
4743 369 M
495 0 V
306 2175 M
52 -8 V
52 -22 V
52 -31 V
52 -35 V
52 -39 V
52 -40 V
52 -40 V
52 -40 V
52 -40 V
52 -40 V
52 -39 V
52 -38 V
52 -37 V
52 -37 V
52 -35 V
52 -35 V
52 -34 V
52 -32 V
52 -32 V
52 -31 V
52 -30 V
52 -29 V
52 -27 V
52 -27 V
52 -26 V
52 -25 V
52 -24 V
52 -22 V
52 -22 V
52 -21 V
52 -20 V
52 -18 V
52 -18 V
52 -16 V
52 -16 V
52 -15 V
52 -13 V
52 -12 V
52 -12 V
52 -10 V
52 -10 V
52 -8 V
52 -7 V
52 -6 V
52 -6 V
52 -4 V
52 -3 V
52 -2 V
52 -1 V
52 0 V
52 1 V
52 2 V
52 3 V
52 4 V
52 6 V
52 6 V
52 7 V
52 8 V
52 10 V
52 10 V
52 12 V
52 12 V
52 13 V
52 15 V
52 16 V
52 16 V
52 18 V
52 18 V
52 20 V
52 21 V
52 22 V
52 22 V
52 24 V
52 25 V
52 26 V
52 27 V
52 27 V
52 29 V
52 30 V
52 31 V
52 32 V
52 32 V
52 34 V
52 35 V
52 35 V
52 37 V
52 37 V
52 38 V
52 39 V
52 40 V
52 40 V
52 40 V
52 40 V
52 40 V
52 39 V
52 35 V
52 31 V
52 22 V
52 8 V
1.000 UL
LT2
4458 3527 M
8 -12 V
52 -70 V
52 -69 V
52 -69 V
52 -67 V
52 -66 V
52 -64 V
52 -64 V
52 -62 V
52 -61 V
52 -59 V
52 -58 V
52 -56 V
52 -54 V
52 -51 V
52 -48 V
52 -43 V
52 -36 V
52 -24 V
52 -9 V
1.000 UL
LT2
306 2485 M
52 9 V
52 24 V
52 36 V
52 43 V
52 48 V
52 51 V
52 54 V
52 56 V
52 58 V
52 59 V
52 61 V
52 62 V
52 64 V
52 64 V
52 66 V
52 67 V
52 69 V
52 69 V
52 70 V
8 12 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Times-Roman
